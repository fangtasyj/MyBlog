<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blog.dao.CommentMapper">

<resultMap type="Comment" id="CommentResult">
	<result property="id" column="id"/>
	<result property="userIp" column="userIp"/>
	<result property="content" column="content"/>	
	<result property="commentDate" column="commentDate"/>
	<result property="state" column="state"/>	
	<association property="blog" column="blogId" select="com.blog.dao.BlogMapper.getBlogById"/>
</resultMap>
	
	<insert id="insertComment" parameterType="Comment">
		insert into t_comment values(null,#{userIp},#{blog.id},#{content},now(),0)
	</insert>

	<update id="updateComment" parameterType="Comment">
		update t_comment
		<set>
			<if test="state!=null">
				state=#{state},
			</if>
		</set>
		where id=#{id}
	</update>
	
	<select id="getAllComment" parameterType="Map" resultMap="CommentResult">
		select * from t_comment
		<where>
			<if test="blogId!=null">
				and blogId=#{blogId}
			</if>
			<if test="state!=null">
				and state=#{state}
			</if>
		</where>
		order by commentDate
		<if test="pageStart!=null and pageSize!=null">
			limit #{pageStart},#{pageSize}
		</if>
	</select>

	<select id="getCommentById" parameterType="Integer" resultMap="CommentResult">
		select * from t_comment where id=#{id};
	</select>
	
	<select id="getCommentTotal" parameterType="Map" resultType="Long">
		select count(*) from t_comment
		<where>
			<if test="state!=null">
				and state=#{state}
			</if>
		</where>
	</select>
	
	<delete id="deleteCommentById" parameterType="Integer">
		delete from t_comment where id=#{id}
	</delete>
	
	<delete id="deleteCommentByBlogId" parameterType="Integer">
		delete from t_comment where blogId=#{blogId}
	</delete>
</mapper>